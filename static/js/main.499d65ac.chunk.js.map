{"version":3,"sources":["docs/examples/GlobalNavigation/ExampleGlobalNavigation.js","docs/examples/SearchBoxSuggestions/ExampleSearchBoxSuggestions.js","docs/examples/Shortcuts/ExampleShortcuts.js","index.js","docs/Docs.js","docs/Navigation.js","docs/ComponentPage.js","docs/Example.js","docs/CodeExample.js","docs/examples sync /^/.*$","components/GlobalNavigation/index.js","components/GlobalNavigation/GlobalNavigation.js","components/GlobalNavigation/GlobalNavigationComponents.js","components/SearchBoxSuggestions/index.js","components/SearchBoxSuggestions/SearchBoxSuggestions.js","components/SearchBoxSuggestions/SearchBoxSuggestionsComponents.js","components/Shortcuts/index.js","components/Shortcuts/Shortcuts.js","components/Shortcuts/ShortcutsComponents.js","docs/Props.js","../config/componentData.js"],"names":["_react","default","createElement","_GlobalNavigation","title","currentUrl","globalNavigationItems","name","url","description","target","className","_interopRequireDefault","__webpack_require__","_SearchBoxSuggestions","ExampleSearchBoxSuggestions","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","_this$state","state","keyCode","length","React","Component","bind","defaultProps","_Shortcuts","alignment","shortcutItems","iconName","_reactDom","_Docs","ReactDOM","render","document","getElementById","_Navigation","_ComponentPage","_componentData","Docs","route","window","location","hash","substr","_this2","addEventListener","component","componentData","components","map","_ref","key","href","concat","_Example","_Props","examples","example","code","componentName","_CodeExample","Example","toggleCode","event","preventDefault","prevState","showCode","_this$props$example","ExampleComponent","require","_highlight","_javascript","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","./GlobalNavigation/ExampleGlobalNavigation","./GlobalNavigation/ExampleGlobalNavigation.js","./SearchBoxSuggestions/ExampleSearchBoxSuggestions","./SearchBoxSuggestions/ExampleSearchBoxSuggestions.js","./Shortcuts/ExampleShortcuts","./Shortcuts/ExampleShortcuts.js","webpackContext","req","id","webpackContextResolve","Error","keys","Object","resolve","module","exports","_GlobalNavigationComponents","NavigationMainContainer","NavigationIconDiv","NavigationIcon","NavigationContainer","NavigationItem","NavigationItemLink","_styledComponents","styled","div","_templateObject","span","_templateObject2","_templateObject3","ul","_templateObject4","li","_templateObject5","a","_templateObject6","_interopRequireWildcard","_SearchBoxSuggestionsComponents","suggestionsListComponent","Suggestions","index","ActiveSuggestion","Suggestion","NoSuggestions","class","Fragment","SuggestionsContainer","TextBox","type","input","_Icon","_ShortcutsComponents","initializeIcons","ToolBarContainer","BaseToolBarContainer","IconWithColor","Icon","ToolBarItem","ToolBarItemLink","defaultValue","required"],"mappings":"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","file":"static/js/main.499d65ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport GlobalNavigation from 'srp-react-library-js/GlobalNavigation';\r\n\r\n/** Example of a menu bar with GlobalNavigation component */\r\nexport default function ExampleGlobalNavigation() {\r\n    const globalNavigationItems = \r\n    [\r\n        {\r\n            \"name\": \"News\",\r\n            \"url\": \"https://sirpointdevs.sharepoint.com/sites/news\",\r\n            \"description\": \"Corporate Company News Portal\",\r\n            \"target\": \"\",\r\n            \"className\" : \"\"\r\n        },\r\n        {\r\n            \"name\": \"Human Resources\",\r\n            \"url\": \"https://sirpointdevs.sharepoint.com/sites/hr\",\r\n            \"description\": \"Human Resources Portal\",\r\n            \"target\": \"\",\r\n            \"className\" : \"\"\r\n        },\r\n        {\r\n            \"name\": \"Learning\",\r\n            \"url\": \"https://sirpointdevs.sharepoint.com/sites/learning\",\r\n            \"description\": \"Learning Portal\",\r\n            \"target\": \"\",\r\n            \"className\" : \"\"\r\n        }\r\n    ] \r\n    \r\n    return <GlobalNavigation title=\"Global Navigation Example\" currentUrl =\"#\" globalNavigationItems = {globalNavigationItems} />\r\n}","import React from 'react';\r\nimport SearchBoxSuggestions from 'srp-react-library-js/SearchBoxSuggestions';\r\nimport PropTypes from \"prop-types\";\r\n\r\n/** Example of a textbox suggestions using a static array */\r\nexport default class ExampleSearchBoxSuggestions extends React.Component {\r\n    static propTypes = {\r\n        suggestions: PropTypes.instanceOf(Array),\r\n        activeSuggestion: PropTypes.number,\r\n        filteredSuggestions: PropTypes.instanceOf(Array),\r\n        showSuggestions: PropTypes.bool,\r\n        userInput: PropTypes.string\r\n      };\r\n    \r\n      static defaultProps = {\r\n        suggestions: [\r\n            \"JavaScript\",\r\n            \"TypeScript\",\r\n            \"React\",\r\n            \"Vue\",\r\n            \"Angular\",\r\n            \"Meteor\",\r\n            \"Ember\",\r\n            \"Backbone\",\r\n            \"Aurelia\",\r\n            \"Polimer\",\r\n            \"Mithril.js\",\r\n            \"JQuery\",\r\n            \"Lodash\",\r\n            \"Modernizr\",\r\n            \"Babel\",\r\n            \"Webpack\",\r\n            \"D3js\",\r\n        ]       \r\n      };\r\n    \r\n      constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          // The active selection's index\r\n          activeSuggestion: 0,\r\n          // The suggestions that match the user's input\r\n          filteredSuggestions: [],\r\n          // Whether or not the suggestion list is shown\r\n          showSuggestions: false,\r\n          // What the user has entered\r\n          userInput: \"\"\r\n        };\r\n      }\r\n    \r\n      onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n    \r\n        const filteredSuggestions = suggestions.filter(\r\n          suggestion =>\r\n            suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n    \r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions,\r\n          showSuggestions: true,\r\n          userInput: e.currentTarget.value\r\n        });\r\n      };\r\n    \r\n      onClick = e => {\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions: [],\r\n          showSuggestions: false,\r\n          userInput: e.currentTarget.innerText\r\n        });\r\n      };\r\n    \r\n      onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n    \r\n        // User pressed the enter key\r\n        if (e.keyCode === 13) {\r\n          this.setState({\r\n            activeSuggestion: 0,\r\n            showSuggestions: false,\r\n            userInput: filteredSuggestions[activeSuggestion]\r\n          });\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n          if (activeSuggestion === 0) {\r\n            return;\r\n          }\r\n    \r\n          this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n            return;\r\n          }\r\n    \r\n          this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n      };\r\n\r\n      \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SearchBoxSuggestions activeSuggestion = {this.state.activeSuggestion} \r\n                                      filteredSuggestions = {this.state.filteredSuggestions}\r\n                                      showSuggestions = {this.state.showSuggestions}\r\n                                      userInput = {this.state.userInput}\r\n                                      onChange = {this.onChange.bind(this)}\r\n                                      onClick = {this.onClick.bind(this)}\r\n                                      onKeyDown = {this.onKeyDown.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Shortcuts from 'srp-react-library-js/Shortcuts';\r\n\r\n/** Example of toolbar with three sites */\r\nexport default function ExampleShortcuts() {\r\n    const shorCuts = \r\n    [\r\n        {\r\n            \"name\": \"My site\",\r\n            \"url\": \"https://sirpointdevs-my.sharepoint.com\",\r\n            \"description\": \"Onedrive\",\r\n            \"target\": \"\",\r\n            \"iconName\": \"OneDrive\",\r\n            \"className\" : \"ms-Icon ms-Icon--OneDrive\"\r\n        },\r\n        {\r\n            \"name\": \"Office 365 Delve\",\r\n            \"url\": \"https://nam.delve.office.com/\",\r\n            \"description\": \"Office 365 Delve site\",\r\n            \"target\": \"\",\r\n            \"iconName\": \"DelveLogo\",\r\n            \"className\" : \"ms-Icon ms-Icon--DelveLogo\"\r\n        },\r\n        {\r\n            \"name\": \"All Users Directory\",\r\n            \"url\": \"https://outlook.office.com/owa/?realm=sirpoint.com&exsvurl=1&ll-cc=1033&modurl=0&path=/people\",\r\n            \"description\": \"All Users Directory\",\r\n            \"target\": \"\",\r\n            \"iconName\": \"People\",\r\n            \"className\" : \"ms-Icon ms-Icon--People\"\r\n        }\r\n    ] \r\n    \r\n    return <Shortcuts alignment = \"right\" shortcutItems = {shorCuts} />\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Docs from './docs/Docs';\r\nimport '../node_modules/highlight.js/styles/ocean.css';\r\n\r\nReactDOM.render(<Docs />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport ComponentPage from './ComponentPage';\r\nimport componentData from '../../config/componentData';\r\n\r\nexport default class Docs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      route: window.location.hash.substr(1)\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('hashchange', () => {\r\n      this.setState({route: window.location.hash.substr(1)})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {route} = this.state;\r\n    const component = route ? componentData.filter( component => component.name === route)[0] : componentData[0];\r\n\r\n    return (\r\n      <div>\r\n        <Navigation components={componentData.map(component => component.name)} />\r\n        <ComponentPage component={component} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navigation = ({components}) => {\r\n  return (\r\n    <ul className=\"navigation\">\r\n      {\r\n        components.map( name => {\r\n          return (\r\n            <li key={name}>\r\n              <a href={`#${name}`}>{name}</a>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  )\r\n}\r\n\r\nNavigation.propTypes = {\r\n  components: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Example from './Example';\r\nimport Props from './Props';\r\n\r\nconst ComponentPage = ({component}) => {\r\n  const {name, description, props, examples} = component;\r\n\r\n  return (\r\n    <div className=\"componentpage\">\r\n      <h2>{name}</h2>\r\n      <p>{description}</p>\r\n\r\n      <h3>Example{examples && examples.length > 1 && \"s\"}</h3>\r\n      {\r\n        examples.length > 0 ?\r\n        examples.map( example => <Example key={example.code} example={example} componentName={name} /> ) :\r\n        \"No examples exist.\"\r\n      }\r\n\r\n      <h3>Props</h3>\r\n      {\r\n        props ?\r\n        <Props props={props} /> :\r\n        \"This component accepts no props.\"\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nComponentPage.propTypes = {\r\n  component: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ComponentPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CodeExample from './CodeExample';\r\n\r\nclass Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showCode: false };\r\n  }\r\n\r\n  toggleCode = event => {\r\n    event.preventDefault();\r\n    this.setState(prevState => {\r\n      return {showCode: !prevState.showCode};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {showCode} = this.state;\r\n    const {code, description, name} = this.props.example;\r\n    // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\r\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\r\n    return (\r\n      <div className=\"example\">\r\n        {description && <h4>{description}</h4> }\r\n\r\n        <ExampleComponent />\r\n\r\n        <div className = \"showCode\">\r\n          <a href=\"\" onClick={this.toggleCode}>\r\n            {showCode ? \"Hide\" : \"Show\"} Code\r\n          </a>\r\n        </div>\r\n\r\n        {showCode && <CodeExample>{code}</CodeExample>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nExample.propTypes = {\r\n  example: PropTypes.object.isRequired,\r\n  componentName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Example;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport hljs from 'highlight.js/lib/highlight';\r\nimport javascript from 'highlight.js/lib/languages/javascript';\r\n\r\n// This way is easy, but adds 170K gzipped to bundle since all langs are included.\r\n// import Highlight from 'react-highlight';\r\n\r\nclass CodeExample extends React.Component {\r\n  componentDidMount() {\r\n    hljs.registerLanguage('javascript', javascript);\r\n    hljs.highlightBlock(this.element);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <pre ref={ref => { this.element = ref }}>\r\n        <code>\r\n          {this.props.children}\r\n        </code>\r\n      </pre>\r\n    )\r\n  }\r\n}\r\n\r\nCodeExample.propTypes = {\r\n  children: PropTypes.string.isRequired\r\n}\r\n\r\nexport default CodeExample;","var map = {\n\t\"./GlobalNavigation/ExampleGlobalNavigation\": 17,\n\t\"./GlobalNavigation/ExampleGlobalNavigation.js\": 17,\n\t\"./SearchBoxSuggestions/ExampleSearchBoxSuggestions\": 18,\n\t\"./SearchBoxSuggestions/ExampleSearchBoxSuggestions.js\": 18,\n\t\"./Shortcuts/ExampleShortcuts\": 26,\n\t\"./Shortcuts/ExampleShortcuts.js\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46;","export {default} from './GlobalNavigation';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavigationMainContainer, \r\n        NavigationIcon, \r\n        NavigationIconDiv, \r\n        NavigationContainer, \r\n        NavigationItem, \r\n        NavigationItemLink } from './GlobalNavigationComponents';\r\n\r\n/** Menu bar component */\r\nconst GlobalNavigation = ({title, currentUrl, globalNavigationItems}) => {\r\n    return (\r\n        <NavigationMainContainer>\r\n            <NavigationIconDiv>\r\n                <NavigationIcon className= {`ms-Icon ms-Icon--Family `} title={title}></NavigationIcon>\r\n            </NavigationIconDiv>\r\n            <NavigationContainer>\r\n                {Object.keys(globalNavigationItems).map(key=> {\r\n                    if(currentUrl === globalNavigationItems[key].url){\r\n                        return(\r\n                            <NavigationItem key={key}>\r\n                                <span>{globalNavigationItems[key].name}</span>\r\n                            </NavigationItem>\r\n                        );\r\n                    }else{\r\n                        return(\r\n                            <NavigationItem key={key}>\r\n                                <NavigationItemLink href={globalNavigationItems[key].url}>{globalNavigationItems[key].name}</NavigationItemLink>\r\n                            </NavigationItem>   \r\n                        );\r\n                    }\r\n                })}\r\n            </NavigationContainer>\r\n        </NavigationMainContainer> \r\n    )\r\n}\r\n\r\nGlobalNavigation.propTypes = {\r\n    /** Title of menu component */\r\n    title: PropTypes.string,\r\n\r\n    /** Current Url used in menu */\r\n    currentUrl: PropTypes.string,\r\n    \r\n    /** Menu Items*/\r\n    globalNavigationItems: PropTypes.array\r\n}\r\n\r\n\r\nexport default GlobalNavigation;","import styled from 'styled-components';\r\n\r\nexport const NavigationMainContainer  = styled.div `\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const NavigationIcon = styled.span `\r\n    margin-left: 5px;\r\n    font-size: 40px;\r\n    width: 100%;\r\n`\r\n\r\nexport const NavigationIconDiv = styled.div `\r\n    width: 3%;\r\n    float: left;\r\n    font-size: 40px;\r\n    font-weight: 900;\r\n    text-align: center;    \r\n`\r\n\r\nexport const NavigationContainer = styled.ul `\r\n    list-style-type: none;\r\n    margin-top: 6px;\r\n    width: 85%;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    height: 40px;\r\n    font-size: 1.15em;\r\n    color: rgb(102, 102, 102);\r\n    float: left;\r\n    width:80%;    \r\n`\r\n\r\nexport const NavigationItem = styled.li `\r\n    float: left;\r\n\r\n    :hover {\r\n        color: rgb(0, 120, 212);\r\n    }            \r\n`\r\n\r\nexport const NavigationItemLink = styled.a`\r\n    display: block;\r\n    text-align: center;\r\n    padding: 5px 16px;\r\n    text-decoration: none;\r\n    color: rgb(102, 102, 102);\r\n`\r\n\r\n","export {default} from './SearchBoxSuggestions';","import React, { Fragment } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { TextBox, Suggestions, Suggestion, ActiveSuggestion, NoSuggestions, SuggestionsContainer } from './SearchBoxSuggestionsComponents';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\n\r\n/** Autocomplete textbox */\r\nconst SearchBoxSuggestions = ({activeSuggestion, filteredSuggestions, showSuggestions, userInput, onChange, onClick, onKeyDown }) => {\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <Suggestions>\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            if (index === activeSuggestion) {\r\n                                return (\r\n                                    <ActiveSuggestion key={suggestion} onClick={onClick}>\r\n                                        {suggestion}\r\n                                    </ActiveSuggestion>\r\n                                );\r\n                            }else{\r\n                                return (\r\n                                    <Suggestion key={suggestion} onClick={onClick}>\r\n                                        {suggestion}\r\n                                    </Suggestion>\r\n                                );\r\n                            }\r\n\r\n\r\n                        })}\r\n                    </Suggestions>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <NoSuggestions class=\"no-suggestions\">\r\n                        <em>No suggestions</em>\r\n                    </NoSuggestions>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <SuggestionsContainer>\r\n                <TextBox type=\"text\" onChange={onChange} onKeyDown={onKeyDown} value={userInput} />\r\n                {suggestionsListComponent}\r\n            </SuggestionsContainer>\r\n        </Fragment>\r\n    );\r\n\r\n}\r\n\r\nSearchBoxSuggestions.propTypes = {\r\n    /** Active selection index*/\r\n    activeSuggestion: PropTypes.number,\r\n\r\n    /** Suggestions that match with the user's input*/\r\n    filteredSuggestions: PropTypes.array,\r\n\r\n    /** Whether or not the suggestion list is shown*/\r\n    showSuggestions: PropTypes.bool,\r\n\r\n    /** User's input*/\r\n    userInput: PropTypes.string\r\n}\r\n\r\nexport default SearchBoxSuggestions;","import styled from 'styled-components';\r\n\r\nexport const TextBox = styled.input`\r\n    border: 1px solid #999;\r\n    padding: 0.5rem;\r\n    width: 300px;\r\n`\r\n\r\nexport const Suggestions = styled.ul`\r\n    position: absolute;\r\n    border: 1px solid #999;\r\n    border-top-width: 0;\r\n    list-style: none;\r\n    margin-top: 0;\r\n    overflow-y: auto;\r\n    padding-left: 0;\r\n    width: calc(300px + 1rem);\r\n    background: white;\r\n    z-index: 1000;\r\n\r\n    :hover {\r\n        background-color: #0467fc;;\r\n        color: #fdfdfd;\r\n        cursor: pointer;\r\n        font-weight: 700;\r\n    }\r\n    \r\n    & :not(:last-of-type){\r\n        border-bottom: 1px solid #999;\r\n    }\r\n`\r\nexport const Suggestion = styled.li`\r\n    padding: 0.5rem;\r\n`\r\n\r\nexport const ActiveSuggestion = styled.li`\r\n    background-color: #0467fc;\r\n    color: #fdfdfd;\r\n    cursor: pointer;\r\n    font-weight: 700;\r\n    padding: 0.5rem;\r\n`\r\nexport const NoSuggestions = styled.div`\r\n    color: #999;\r\n    padding: 0.5rem;\r\n`\r\n\r\nexport const SuggestionsContainer = styled.div`\r\n    margin: auto;\r\n    width: 50%;\r\n`","export {default} from './Shortcuts';","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport styled from 'styled-components';\r\nimport { BaseToolBarContainer, ToolBarItem, ToolBarItemLink } from './ShortcutsComponents';\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\n/** Toolbar with shorcuts to navigate to most used sites */\r\nfunction Shortcuts ({alignment, shortcutItems}) {\r\n    const ToolBarContainer = styled(BaseToolBarContainer)`\r\n        &&& {\r\n           text-align: ${alignment};\r\n        }\r\n    `\r\n\r\n    const IconWithColor = styled(Icon)`\r\n        color: rgb(0, 120, 215);\r\n    `\r\n\r\n    return (\r\n        <div>\r\n            <ToolBarContainer>\r\n                {Object.keys(shortcutItems).map(key=>{\r\n                    return(                \r\n                        <ToolBarItem key = {key}>\r\n                            <ToolBarItemLink href={shortcutItems[key].url} target= {shortcutItems[key].target}>\r\n                                <IconWithColor iconName = {shortcutItems[key].iconName} className = {shortcutItems[key].className} title = {shortcutItems[key].name}/>\r\n                            </ToolBarItemLink>\r\n                        </ToolBarItem>   \r\n                    );\r\n                })}\r\n            </ToolBarContainer>        \r\n        </div>\r\n    );\r\n}\r\n\r\nShortcuts.propTypes = {\r\n    /** Alignment */\r\n    alignment: PropTypes.string,\r\n    /** Array of shortcuts to show */\r\n    shortcutItems: PropTypes.array\r\n}\r\n\r\nexport default Shortcuts;","\r\nimport styled from 'styled-components';\r\n\r\nexport const BaseToolBarContainer = styled.ul`\r\n        list-style-type: none;\r\n        width: 100%;\r\n        margin: 0;\r\n        padding: 0;\r\n        overflow: hidden;\r\n        height: 40px;\r\n        font-size: 1.15em;\r\n    `\r\n\r\nexport const ToolBarItem = styled.li`\r\n    display: inline-block;\r\n    padding-left: 7px;    \r\n`\r\n\r\nexport const ToolBarItemLink = styled.a`\r\n    font-size: 1.5em;\r\n    cursor: pointer;\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Props = ({props}) => {\r\n  return (\r\n    <table className=\"props\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Description</th>\r\n          <th>Type</th>\r\n          <th>Default</th>\r\n          <th>Required</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {\r\n        Object.keys(props).map(key => {\r\n          return (\r\n            <tr key={key}>\r\n              <td>{key}</td>\r\n              <td>{props[key].description}</td>\r\n              <td>{props[key].type.name}</td>\r\n              <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\r\n              <td>{props[key].required && \"X\"}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      }\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nProps.propTypes = {\r\n  props: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Props;","module.exports =\n/* eslint-disable */\n[{\n  \"name\": \"GlobalNavigation\",\n  \"description\": \"Menu bar component\",\n  \"props\": {\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Title of menu component\"\n    },\n    \"currentUrl\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Current Url used in menu\"\n    },\n    \"globalNavigationItems\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"Menu Items\"\n    }\n  },\n  \"code\": \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport {NavigationMainContainer, \\r\\n        NavigationIcon, \\r\\n        NavigationIconDiv, \\r\\n        NavigationContainer, \\r\\n        NavigationItem, \\r\\n        NavigationItemLink } from './GlobalNavigationComponents';\\r\\n\\r\\n/** Menu bar component */\\r\\nconst GlobalNavigation = ({title, currentUrl, globalNavigationItems}) => {\\r\\n    return (\\r\\n        <NavigationMainContainer>\\r\\n            <NavigationIconDiv>\\r\\n                <NavigationIcon className= {`ms-Icon ms-Icon--Family `} title={title}></NavigationIcon>\\r\\n            </NavigationIconDiv>\\r\\n            <NavigationContainer>\\r\\n                {Object.keys(globalNavigationItems).map(key=> {\\r\\n                    if(currentUrl === globalNavigationItems[key].url){\\r\\n                        return(\\r\\n                            <NavigationItem key={key}>\\r\\n                                <span>{globalNavigationItems[key].name}</span>\\r\\n                            </NavigationItem>\\r\\n                        );\\r\\n                    }else{\\r\\n                        return(\\r\\n                            <NavigationItem key={key}>\\r\\n                                <NavigationItemLink href={globalNavigationItems[key].url}>{globalNavigationItems[key].name}</NavigationItemLink>\\r\\n                            </NavigationItem>   \\r\\n                        );\\r\\n                    }\\r\\n                })}\\r\\n            </NavigationContainer>\\r\\n        </NavigationMainContainer> \\r\\n    )\\r\\n}\\r\\n\\r\\nGlobalNavigation.propTypes = {\\r\\n    /** Title of menu component */\\r\\n    title: PropTypes.string,\\r\\n\\r\\n    /** Current Url used in menu */\\r\\n    currentUrl: PropTypes.string,\\r\\n    \\r\\n    /** Menu Items*/\\r\\n    globalNavigationItems: PropTypes.array\\r\\n}\\r\\n\\r\\n\\r\\nexport default GlobalNavigation;\",\n  \"examples\": [{\n    \"name\": \"ExampleGlobalNavigation\",\n    \"description\": \"Example of a menu bar with GlobalNavigation component\",\n    \"code\": \"import React from 'react';\\r\\nimport GlobalNavigation from 'srp-react-library-js/GlobalNavigation';\\r\\n\\r\\n/** Example of a menu bar with GlobalNavigation component */\\r\\nexport default function ExampleGlobalNavigation() {\\r\\n    const globalNavigationItems = \\r\\n    [\\r\\n        {\\r\\n            \\\"name\\\": \\\"News\\\",\\r\\n            \\\"url\\\": \\\"https://sirpointdevs.sharepoint.com/sites/news\\\",\\r\\n            \\\"description\\\": \\\"Corporate Company News Portal\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"className\\\" : \\\"\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"Human Resources\\\",\\r\\n            \\\"url\\\": \\\"https://sirpointdevs.sharepoint.com/sites/hr\\\",\\r\\n            \\\"description\\\": \\\"Human Resources Portal\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"className\\\" : \\\"\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"Learning\\\",\\r\\n            \\\"url\\\": \\\"https://sirpointdevs.sharepoint.com/sites/learning\\\",\\r\\n            \\\"description\\\": \\\"Learning Portal\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"className\\\" : \\\"\\\"\\r\\n        }\\r\\n    ] \\r\\n    \\r\\n    return <GlobalNavigation title=\\\"Global Navigation Example\\\" currentUrl =\\\"#\\\" globalNavigationItems = {globalNavigationItems} />\\r\\n}\"\n  }]\n}, {\n  \"name\": \"SearchBoxSuggestions\",\n  \"description\": \"Autocomplete textbox\",\n  \"props\": {\n    \"activeSuggestion\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Active selection index\"\n    },\n    \"filteredSuggestions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"Suggestions that match with the user's input\"\n    },\n    \"showSuggestions\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Whether or not the suggestion list is shown\"\n    },\n    \"userInput\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"User's input\"\n    }\n  },\n  \"code\": \"import React, { Fragment } from \\\"react\\\";\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { TextBox, Suggestions, Suggestion, ActiveSuggestion, NoSuggestions, SuggestionsContainer } from './SearchBoxSuggestionsComponents';\\r\\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\\r\\n\\r\\n/** Autocomplete textbox */\\r\\nconst SearchBoxSuggestions = ({activeSuggestion, filteredSuggestions, showSuggestions, userInput, onChange, onClick, onKeyDown }) => {\\r\\n    let suggestionsListComponent;\\r\\n\\r\\n    if (showSuggestions && userInput) {\\r\\n            if (filteredSuggestions.length) {\\r\\n                suggestionsListComponent = (\\r\\n                    <Suggestions>\\r\\n                        {filteredSuggestions.map((suggestion, index) => {\\r\\n                            if (index === activeSuggestion) {\\r\\n                                return (\\r\\n                                    <ActiveSuggestion key={suggestion} onClick={onClick}>\\r\\n                                        {suggestion}\\r\\n                                    </ActiveSuggestion>\\r\\n                                );\\r\\n                            }else{\\r\\n                                return (\\r\\n                                    <Suggestion key={suggestion} onClick={onClick}>\\r\\n                                        {suggestion}\\r\\n                                    </Suggestion>\\r\\n                                );\\r\\n                            }\\r\\n\\r\\n\\r\\n                        })}\\r\\n                    </Suggestions>\\r\\n                );\\r\\n            } else {\\r\\n                suggestionsListComponent = (\\r\\n                    <NoSuggestions class=\\\"no-suggestions\\\">\\r\\n                        <em>No suggestions</em>\\r\\n                    </NoSuggestions>\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <Fragment>\\r\\n            <SuggestionsContainer>\\r\\n                <TextBox type=\\\"text\\\" onChange={onChange} onKeyDown={onKeyDown} value={userInput} />\\r\\n                {suggestionsListComponent}\\r\\n            </SuggestionsContainer>\\r\\n        </Fragment>\\r\\n    );\\r\\n\\r\\n}\\r\\n\\r\\nSearchBoxSuggestions.propTypes = {\\r\\n    /** Active selection index*/\\r\\n    activeSuggestion: PropTypes.number,\\r\\n\\r\\n    /** Suggestions that match with the user's input*/\\r\\n    filteredSuggestions: PropTypes.array,\\r\\n\\r\\n    /** Whether or not the suggestion list is shown*/\\r\\n    showSuggestions: PropTypes.bool,\\r\\n\\r\\n    /** User's input*/\\r\\n    userInput: PropTypes.string\\r\\n}\\r\\n\\r\\nexport default SearchBoxSuggestions;\",\n  \"examples\": [{\n    \"name\": \"ExampleSearchBoxSuggestions\",\n    \"description\": \"Example of a textbox suggestions using a static array\",\n    \"code\": \"import React from 'react';\\r\\nimport SearchBoxSuggestions from 'srp-react-library-js/SearchBoxSuggestions';\\r\\nimport PropTypes from \\\"prop-types\\\";\\r\\n\\r\\n/** Example of a textbox suggestions using a static array */\\r\\nexport default class ExampleSearchBoxSuggestions extends React.Component {\\r\\n    static propTypes = {\\r\\n        suggestions: PropTypes.instanceOf(Array),\\r\\n        activeSuggestion: PropTypes.number,\\r\\n        filteredSuggestions: PropTypes.instanceOf(Array),\\r\\n        showSuggestions: PropTypes.bool,\\r\\n        userInput: PropTypes.string\\r\\n      };\\r\\n    \\r\\n      static defaultProps = {\\r\\n        suggestions: [\\r\\n            \\\"JavaScript\\\",\\r\\n            \\\"TypeScript\\\",\\r\\n            \\\"React\\\",\\r\\n            \\\"Vue\\\",\\r\\n            \\\"Angular\\\",\\r\\n            \\\"Meteor\\\",\\r\\n            \\\"Ember\\\",\\r\\n            \\\"Backbone\\\",\\r\\n            \\\"Aurelia\\\",\\r\\n            \\\"Polimer\\\",\\r\\n            \\\"Mithril.js\\\",\\r\\n            \\\"JQuery\\\",\\r\\n            \\\"Lodash\\\",\\r\\n            \\\"Modernizr\\\",\\r\\n            \\\"Babel\\\",\\r\\n            \\\"Webpack\\\",\\r\\n            \\\"D3js\\\",\\r\\n        ]       \\r\\n      };\\r\\n    \\r\\n      constructor(props) {\\r\\n        super(props);\\r\\n    \\r\\n        this.state = {\\r\\n          // The active selection's index\\r\\n          activeSuggestion: 0,\\r\\n          // The suggestions that match the user's input\\r\\n          filteredSuggestions: [],\\r\\n          // Whether or not the suggestion list is shown\\r\\n          showSuggestions: false,\\r\\n          // What the user has entered\\r\\n          userInput: \\\"\\\"\\r\\n        };\\r\\n      }\\r\\n    \\r\\n      onChange = e => {\\r\\n        const { suggestions } = this.props;\\r\\n        const userInput = e.currentTarget.value;\\r\\n    \\r\\n        const filteredSuggestions = suggestions.filter(\\r\\n          suggestion =>\\r\\n            suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\\r\\n        );\\r\\n    \\r\\n        this.setState({\\r\\n          activeSuggestion: 0,\\r\\n          filteredSuggestions,\\r\\n          showSuggestions: true,\\r\\n          userInput: e.currentTarget.value\\r\\n        });\\r\\n      };\\r\\n    \\r\\n      onClick = e => {\\r\\n        this.setState({\\r\\n          activeSuggestion: 0,\\r\\n          filteredSuggestions: [],\\r\\n          showSuggestions: false,\\r\\n          userInput: e.currentTarget.innerText\\r\\n        });\\r\\n      };\\r\\n    \\r\\n      onKeyDown = e => {\\r\\n        const { activeSuggestion, filteredSuggestions } = this.state;\\r\\n    \\r\\n        // User pressed the enter key\\r\\n        if (e.keyCode === 13) {\\r\\n          this.setState({\\r\\n            activeSuggestion: 0,\\r\\n            showSuggestions: false,\\r\\n            userInput: filteredSuggestions[activeSuggestion]\\r\\n          });\\r\\n        }\\r\\n        // User pressed the up arrow\\r\\n        else if (e.keyCode === 38) {\\r\\n          if (activeSuggestion === 0) {\\r\\n            return;\\r\\n          }\\r\\n    \\r\\n          this.setState({ activeSuggestion: activeSuggestion - 1 });\\r\\n        }\\r\\n        // User pressed the down arrow\\r\\n        else if (e.keyCode === 40) {\\r\\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\\r\\n            return;\\r\\n          }\\r\\n    \\r\\n          this.setState({ activeSuggestion: activeSuggestion + 1 });\\r\\n        }\\r\\n      };\\r\\n\\r\\n      \\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <SearchBoxSuggestions activeSuggestion = {this.state.activeSuggestion} \\r\\n                                      filteredSuggestions = {this.state.filteredSuggestions}\\r\\n                                      showSuggestions = {this.state.showSuggestions}\\r\\n                                      userInput = {this.state.userInput}\\r\\n                                      onChange = {this.onChange.bind(this)}\\r\\n                                      onClick = {this.onClick.bind(this)}\\r\\n                                      onKeyDown = {this.onKeyDown.bind(this)}/>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\"\n  }]\n}, {\n  \"name\": \"Shortcuts\",\n  \"description\": \"Toolbar with shorcuts to navigate to most used sites\",\n  \"props\": {\n    \"alignment\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Alignment\"\n    },\n    \"shortcutItems\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"Array of shortcuts to show\"\n    }\n  },\n  \"code\": \"import React from 'react';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\\r\\nimport styled from 'styled-components';\\r\\nimport { BaseToolBarContainer, ToolBarItem, ToolBarItemLink } from './ShortcutsComponents';\\r\\nimport { initializeIcons } from '@uifabric/icons';\\r\\ninitializeIcons();\\r\\n\\r\\n/** Toolbar with shorcuts to navigate to most used sites */\\r\\nfunction Shortcuts ({alignment, shortcutItems}) {\\r\\n    const ToolBarContainer = styled(BaseToolBarContainer)`\\r\\n        &&& {\\r\\n           text-align: ${alignment};\\r\\n        }\\r\\n    `\\r\\n\\r\\n    const IconWithColor = styled(Icon)`\\r\\n        color: rgb(0, 120, 215);\\r\\n    `\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            <ToolBarContainer>\\r\\n                {Object.keys(shortcutItems).map(key=>{\\r\\n                    return(                \\r\\n                        <ToolBarItem key = {key}>\\r\\n                            <ToolBarItemLink href={shortcutItems[key].url} target= {shortcutItems[key].target}>\\r\\n                                <IconWithColor iconName = {shortcutItems[key].iconName} className = {shortcutItems[key].className} title = {shortcutItems[key].name}/>\\r\\n                            </ToolBarItemLink>\\r\\n                        </ToolBarItem>   \\r\\n                    );\\r\\n                })}\\r\\n            </ToolBarContainer>        \\r\\n        </div>\\r\\n    );\\r\\n}\\r\\n\\r\\nShortcuts.propTypes = {\\r\\n    /** Alignment */\\r\\n    alignment: PropTypes.string,\\r\\n    /** Array of shortcuts to show */\\r\\n    shortcutItems: PropTypes.array\\r\\n}\\r\\n\\r\\nexport default Shortcuts;\",\n  \"examples\": [{\n    \"name\": \"ExampleShortcuts\",\n    \"description\": \"Example of toolbar with three sites\",\n    \"code\": \"import React from 'react';\\r\\nimport Shortcuts from 'srp-react-library-js/Shortcuts';\\r\\n\\r\\n/** Example of toolbar with three sites */\\r\\nexport default function ExampleShortcuts() {\\r\\n    const shorCuts = \\r\\n    [\\r\\n        {\\r\\n            \\\"name\\\": \\\"My site\\\",\\r\\n            \\\"url\\\": \\\"https://sirpointdevs-my.sharepoint.com\\\",\\r\\n            \\\"description\\\": \\\"Onedrive\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"iconName\\\": \\\"OneDrive\\\",\\r\\n            \\\"className\\\" : \\\"ms-Icon ms-Icon--OneDrive\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"Office 365 Delve\\\",\\r\\n            \\\"url\\\": \\\"https://nam.delve.office.com/\\\",\\r\\n            \\\"description\\\": \\\"Office 365 Delve site\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"iconName\\\": \\\"DelveLogo\\\",\\r\\n            \\\"className\\\" : \\\"ms-Icon ms-Icon--DelveLogo\\\"\\r\\n        },\\r\\n        {\\r\\n            \\\"name\\\": \\\"All Users Directory\\\",\\r\\n            \\\"url\\\": \\\"https://outlook.office.com/owa/?realm=sirpoint.com&exsvurl=1&ll-cc=1033&modurl=0&path=/people\\\",\\r\\n            \\\"description\\\": \\\"All Users Directory\\\",\\r\\n            \\\"target\\\": \\\"\\\",\\r\\n            \\\"iconName\\\": \\\"People\\\",\\r\\n            \\\"className\\\" : \\\"ms-Icon ms-Icon--People\\\"\\r\\n        }\\r\\n    ] \\r\\n    \\r\\n    return <Shortcuts alignment = \\\"right\\\" shortcutItems = {shorCuts} />\\r\\n}\"\n  }]\n}];"],"sourceRoot":""}